---
title: "native_food_preferences"
author: "Kevin Havis"
format: html
---

```{r}
source('load_data.R')
```

```{r}
library(tidyverse)
library(infer)
library(broom)
```

What cuisines do women prefer compared to men?

1.  Calculate overall mean rating per country
2.  Calculate mean per country by gender
3.  Compare differences in two means

```{r}
# Convert to long form data
long_data <- data |> 
  drop_na(gender) |> 
  pivot_longer(cols = algeria:ireland, names_to = "country", values_to = "rating")
```

```{r}
# Calculate overall rating means per country
long_data |> 
  drop_na(gender) |> 
  group_by(country) |> 
  summarize(mean_rtg = mean(rating, na.rm = TRUE))
```

```{r}
ggplot(long_data, aes(x=rating)) +
  geom_histogram() +
  facet_wrap(~gender)
```

```{r}
anova_results <- aov(rating ~ gender + country, data = long_data)

summary(anova_results)
```

```{r}
plot(anova_results, which = 2)
```

## Abstract

In this analysis we explore the relationship between U.S. Adults preferences to cuisine from different countries around the world to their socioeconomic characteristics. We use primarily use Analysis Over Variance (ANOVA) to identify differences in the mean ratings across groups.

## Introduction

The primary questions we will answer;

Do men and women have the same preferences in cuisine? If so, do any particular countries stand out?

Our data comes from [FiveThirtyEight's International Food Association's 2014 World Cup](https://fivethirtyeight.com/features/the-fivethirtyeight-international-food-associations-2014-world-cup/) Food World Cup survey conducted in 2014.

The data has 1,373 responses where participants rate how much they like a given country's food. Other information about the respondents are also available, including gender, world cuisine knowledge, education, age, and income.

| Value | Description |
|----|----|
| 5 | I love this country's traditional cuisine. I think it's one of the best in the world. |
| 4 | I like this country's traditional cuisine. I think it's considerably above average. |
| 3 | I'm OK with this county's traditional cuisine. I think it's about average. |
| 2 | I dislike this country's traditional cuisine. I think it's considerably below average. |
| 1 | I hate this country's traditional cuisine. I think it's one of the worst in the world. |
| N/A | I'm unfamiliar with this country's traditional cuisine. |

## Data Display

```{r}
# Kable of the data
```

```{r, fig.height=8, fig.width=12}
ggplot(long_data, aes(x=country, y = rating, color=gender)) +
  geom_jitter(alpha = .6, shape = 1, size = 1, width = 0.25, height = 0.25) + 
  #coord_flip() +
  theme_minimal() +
  scale_color_manual(values = c("#006296", "#F77F00")) +
  labs(title="Rating of countries' native foods by gender") +
  scale_x_discrete(label = str_to_title(long_data$country)) +
  guides(x =  guide_axis(angle = 90))
```


## Data Analysis

```{r}
# Distribution of men and women's ratings

ggplot(long_data, aes(x=rating, fill=gender)) +
  geom_bar(position="dodge") +
  theme_minimal() +
  labs(title="Ratings are approximately normal for both genders", subtitle="Distribution is slightly left skewed") +
  scale_fill_manual(values = c("#006296", "#F77F00"))
```


```{r}
# Separate men and women's ratings
women_mean <- long_data |> 
  filter(gender == "Female") |> 
  group_by(country) |> 
  summarize(mean_rtg = mean(rating, na.rm = TRUE))

# Calculate overall rating means per country for men
men_mean <- long_data |> 
  filter(gender == "Male") |> 
  group_by(country) |> 
  summarize(mean_rtg = mean(rating, na.rm = TRUE))
```

```{r}
# Apply t-test

# Calculate the observed difference in means between genders
obs_diff <- long_data |> 
  drop_na(gender) |> 
  specify(rating ~ gender) |> 
  calculate(stat = "diff in means", order = c('Male', 'Female'))

# Calculate the null distribution
null_dist <- long_data |> 
  drop_na(gender) |> 
  specify(rating ~ gender) |> 
  hypothesise(null = "independence") |> 
  generate(reps = 1000, type = "permute") |> 
  calculate(stat = "diff in means", order = c('Male', 'Female'))

# Get p-value
null_dist |> 
  get_p_value(obs_stat = obs_diff, direction = "two_sided")

# Plot p value and null distribution
ggplot(data = null_dist, aes(x = stat)) +
  geom_histogram() +
  geom_vline(xintercept = obs_diff$stat, color = 'red') +
  annotate(
  geom = "label", x = -0.065, y = 100,
  label = "p-value = 0",
  hjust = "left", color = "red"
  ) +
  labs(title="Null Distribution: Difference in mean ratings between genders", subtitle = "Small but statistically signicant difference in ratings") +
  theme_minimal()

```

```{r}
# Multiple linear regression
gen_country_model <- lm(rating ~ gender * country, data=long_data)
summary(gen_country_model)
```

```{r}
coef <- tidy(gen_country_model)

coef |> 
  filter(str_starts(term, "genderMale")) |> 
  filter(p.value < 0.05)
```

```{r}
# Try out MLR

mlr <- lm(rating ~ gender + education + country + knowledge_cuisines + interest_cuisines + household_income + age, data = long_data)

summary.lm(mlr)
```
```{r}
kevin <- tibble(education = 'Graduate degree', gender = 'Male', knowledge_cuisines = 'Advanced', interest_cuisines = 5)

country_list <- long_data |> 
  distinct(country)

# add all countries to individual's dataframe
kevin <- kevin |> 
  expand_grid(country = unlist(country_list))

predict_kevin <- kevin |> 
  mutate(predicted_rating = predict(mlr, newdata = kevin))

predict_kevin |> 
  filter(predicted_rating == max(predicted_rating))

```

```{r}
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)

# Sample model (replace with your actual model object)
mlr <- lm(rating ~ gender + education + country + knowledge_cuisines + interest_cuisines, data = long_data)

# Define UI
ui <- fluidPage(
  titlePanel("Cuisine Preference Prediction"),
  
  sidebarLayout(
    sidebarPanel(
      selectInput("education", "Education Level:",
                  choices = c("Graduate degree", "High school degree", "Some college or Associate degree", 
                              "Less than high school degree")),
      
      selectInput("gender", "Gender:",
                  choices = c("Male", "Female")),
      
      selectInput("knowledge_cuisines", "Cuisine Knowledge Level:",
                  choices = c("Novice", "Intermediate", "Advanced")),
      
      sliderInput("interest_cuisines", "Interest in Cuisines (1-10):", 
                  min = 1, max = 10, value = 5),
      
      actionButton("predict_button", "Predict Favorite Cuisine")
    ),
    
    mainPanel(
      textOutput("favorite_cuisine"),
      tableOutput("prediction_results")
    )
  )
)

# Define server logic
server <- function(input, output, session) {
  
  # Reactive function to predict based on inputs
  predict_favorite_cuisine <- eventReactive(input$predict_button, {
    # Input data
    kevin <- tibble(
      education = input$education,
      gender = input$gender,
      knowledge_cuisines = input$knowledge_cuisines,
      interest_cuisines = input$interest_cuisines
    )
    
    # List of countries from long_data (replace with actual dataset)
    country_list <- long_data |> distinct(country)
    
    # Add all countries to individual's dataframe
    kevin <- kevin |> expand_grid(country = unlist(country_list))
    
    # Make predictions
    predict_kevin <- kevin |> 
      mutate(predicted_rating = predict(mlr, newdata = kevin))
    
    # Return the row with highest predicted rating
    best_cuisine <- predict_kevin |> 
      filter(predicted_rating == max(predicted_rating)) %>%
      select(country, predicted_rating)
    
    return(best_cuisine)
  })
  
  # Output predicted favorite cuisine
  output$favorite_cuisine <- renderText({
    prediction <- predict_favorite_cuisine()
    paste("Your predicted favorite cuisine is from: ", prediction$country)
  })
  
  # Output full prediction results
  output$prediction_results <- renderTable({
    predict_favorite_cuisine()
  })
}

# Run the application
shinyApp(ui = ui, server = server)

```

```{r}
china_data <- long_data |> 
  filter(country == "china")

china_lm <- lm(rating ~ education + knowledge_cuisines + interest_cuisines, data=china_data)

summary(china_lm)
```

```{r}
aus_data <- long_data |> 
  filter(country == "australia")

aus_lm <- lm(rating ~ education + knowledge_cuisines + interest_cuisines, data=aus_data)

summary(aus_lm)
```

aus_lm <- lm(rating ~ education + knowledge_cuisines + interest_cuisines, data=aus_data)

summary(aus_lm)

## Conclusion
